Что такое стэк ?
  Стэк - это набор технологий на основе которых создаеться ПО.
Сейчас существует множество стэков. Я буду наводить примеры стэков в вебе.

Какие стеки существуют?
 - LAMP (Linux, Apache, MySQL, PHP)(Server-side-render)
 - WAMP (Windows, Apache, MySQL, PHP)(Server-side-render)
 - MERN, MEAN, MEVN(MongoDB, Express, Angular-React-Vue, Node)(Client-side-render)
 - JAM (JavaScript, API, Markup)(Static-site-generation)

Стэк позволяет нам изучить технологии для создания полноценного приложения не отвлекаясь на другие технологии.
Для веба каждый стэк технологий дает нам разный тип рендеринга. Существуют разные типы рендера. 
Мы поговорим об основных типах рендеринга.

Какой есть выбор между типами рендеринга?
 - SSR (server-side-rendering)
 - CSR (client-side-rendering) 
 - SSG (static-site-generation)
 - ISR (incremental-side-rendering)
 - USR (universal-site-rendering)

SSR - самый старый тип рендернига. 
Рассмотрим как происходит этот рендер быстренько.
Суть: 
  - браузер делалет запрос на html страницу 
  - сервер формирует страницу 
  - отдает ее браузеру  
  - и мы только отображаем ее 
  - После того как мы получили от сервера страницу мы выполняем JS

Есть плюсы и минусы такого типа рендеринга 
Плюсы: 
 - Прекрасное SEO
 - Отображение превьюшек для сайтов. Поисковая система считает мета-теги
 - Идет меньше нагрузки на клиенте из за того что клиенту нужно только отобразить html

Минусы: 
 - Мы нагружаем сервер а значит он будет иметь меньшую пропускную способность 
 - Хоть страница и загружена однако пользоваться ее можно будет только тогда когда весь JS будет загружен TTI(time to interactive)  

Это используют такие веб приложения как YouTube, Rozetka, Airbnb, Netflix, Uber, Upwork и другие.

Как мы можем это реализвать? 
 Самым очевидным вариантом это воспользоваться стэками LAMP, WAMP для генерации страниц сервером.
Для фронтенд разработчиков на React можно использовать Next.js или (Razzle ???)
На Angular мы можем взять Angular Universal
Для Vue - Nuxt.js который сильно схож с Next.js


CSR - это клиентский рендеринг страниц.
Суть: 
 - мы получаем почти пустую страницу со скриптами
 - ждем пока весь JS загрузится 
 - только тогда пользователь сможет пользоваться страницей  

Плюсы: 
 - Быстрая отрисовка после первой загрузки 
 - Быстрая навигация 
 - Меньшая нагрузка на сервер 

Минусы: 
 - Очень плохое SEO - не все имеют возможности индексировать JS 
 - Сильно нагружает технику клиента          

Кто пользуеться таким подходом Facebook, Gmail, Trello, Quora, Slack и другие.

Как реализовать? 
 стэки которыми можно реалаизовать полноценное приложение (MERN, MEVN, MEAN) 
 Берем один из популярных фреймворков для фронтенд разработки это React, Angular, Vue, Svelte.

SSG - статическая генерация сайтов.
Суть: 
 - мы подготавливаем шаболны страниц заранее 
 - распологаем его на CDN 
 - отдаем клиенту 
Плюсы:
 - Быстрая занрузка так как контент статический 
 - Не нужен backend    
 - Безопасность так как нету сервера 
 - Дешевый, на стороне клиента тоже ничего не нужно отрисовывать     
Минусы: 
 - Невозможно использовать динамический контент 
 - Нет авторизации (это поправляется)

Кто пользуеться? 
  документация React, Lodash, Postman и другие. Также его используют e-commerce проекты.

Как реализовать? 
 здесь можно воспользоваться JAMstack(JavaScript, Api, Markup)
 для React можно взять  Gatsby, React Static, Next.js(он может универсально перелючаться между типами рендера), Jekyll, Hugo.
 Angular - это Scully 
 Vue - Nuxt.js GridSome,  VuePress. 



Преимущества JAMstack
 - Уменьшения затрат - практичеки не нужен сервер и база данных что влияет на
 цену. Также уменьшаются затраты на поддрежание этого сервера так как он 
статический devOps разработчику нужно меньше работать     
 - Производительность - не нужен сервер и база данных, а значит лучшая 
производительность  
 - Безопасность - достигаеться из за того что мы не используем чего то
 динамического и нету базы данных а значить нечего взламывать. Но что же делать 
с авторизацией? 

Что определяет JAMstack?
 - Собирается один раз и отдается на CDN
 - Git
 - только статика то есть отдается уже собраный HTML, CSS, JavaScript
 - Atomic Deploys(что это?)
 - Cache Invalidation (что это?)
Как построить JAMstack сайт?
 - берете простой html css javascript 
 - запихиваете его в статический хостинг типо GitHubPages, Netlify etc.
 - Он всегда отдает статику
 - по SEO то что генерируется на JavaScript увы не подлежит читке роботов или 
подлежит, но очень медленно.



Links:
 - about stacks: https://dev.to/salmansiddique/jam-v-lamp-v-mern-v-mean-stack-470l
 - difference  between types render: https://dou.ua/forums/topic/31720/
 - video about type rendering: https://www.youtube.com/watch?v=xg-lajRmCco   

